#pragma once

#include "dither.h"
#include <opencv2/opencv.hpp>
#include <tuple>
#include <map>
#include <list>

namespace dither
{
    enum method
    {
        FLOYD_STEINBERG,
        JARVIS_JUDICE_NINKE,
        STUCKI,
        BURKES,
        SIERRA,
        SIERRA_2,
        SIERRA_3,
        ATKINSON,
        STEVENSON_ARCE
    };

    enum color
    {
        Black,
        White,
        Green,
        Blue,
        Red,
        Yellow,
        Orange
    };

    using BGR = cv::Vec3b;
    static std::map<dither::color, dither::BGR> color_map = {

        {White, {255, 255, 255}},
        {Green, {0, 255, 0}},
        {Blue, {255, 0, 0}},
        {Red, {0, 0, 255}},
        {Yellow, {0, 255, 255}},
        {Orange, {0, 128, 255}}
    };

    static std::map<dither::method, std::vector<std::tuple<int, int, float>>> diffusion_map =
    {
        {
            FLOYD_STEINBERG, {
                {1, 0, 7.0 / 16.0},
                {-1, 1, 3.0 / 16.0},
                {0, 1, 5.0 / 16.0},
                {1, 1, 1.0 / 16.0}
            }
        },
        {
            JARVIS_JUDICE_NINKE, {
                {1, 0, 7.0 / 48.0},
                {2, 0, 5.0 / 48.0},
                {-2, 1, 3.0 / 48.0},
                {-1, 1, 5.0 / 48.0},
                {0, 1, 7.0 / 48.0},
                {1, 1, 5.0 / 48.0},
                {2, 1, 3.0 / 48.0},
                {-2, 2, 1.0 / 48.0},
                {-1, 2, 3.0 / 48.0},
                {0, 2, 5.0 / 48.0},
                {1, 2, 3.0 / 48.0},
                {2, 2, 1.0 / 48.0}
            }
        },
        {
            STUCKI, {
                {1, 0, 8.0 / 42.0},
                {2, 0, 4.0 / 42.0},
                {-2, 1, 2.0 / 42.0},
                {-1, 1, 4.0 / 42.0},
                {0, 1, 8.0 / 42.0},
                {1, 1, 4.0 / 42.0},
                {2, 1, 2.0 / 42.0},
                {-2, 2, 1.0 / 42.0},
                {-1, 2, 2.0 / 42.0},
                {0, 2, 4.0 / 42.0},
                {1, 2, 2.0 / 42.0},
                {2, 2, 1.0 / 42.0}
            }
        },
        {
            BURKES, {
                {1, 0, 8.0 / 32.0},
                {2, 0, 4.0 / 32.0},
                {-2, 1, 2.0 / 32.0},
                {-1, 1, 4.0 / 32.0},
                {0, 1, 8.0 / 32.0},
                {1, 1, 4.0 / 32.0},
                {2, 1, 2.0 / 32.0}
            }
        },
        {
            SIERRA, {
                {1, 0, 5.0 / 32.0},
                {2, 0, 3.0 / 32.0},
                {-2, 1, 2.0 / 32.0},
                {-1, 1, 4.0 / 32.0},
                {0, 1, 5.0 / 32.0},
                {1, 1, 4.0 / 32.0},
                {2, 1, 2.0 / 32.0},
                {-1, 2, 2.0 / 32.0},
                {0, 2, 3.0 / 32.0},
                {1, 2, 2.0 / 32.0}
            }
        },
        {
            SIERRA_2, {
                {1, 0, 4.0 / 16.0},
                {2, 0, 3.0 / 16.0},
                {-2, 1, 1.0 / 16.0},
                {-1, 1, 2.0 / 16.0},
                {0, 1, 3.0 / 16.0},
                {1, 1, 2.0 / 16.0},
                {2, 1, 1.0 / 16.0}
            }
        },
        {
            SIERRA_3, {
                {1, 0, 5.0 / 32.0},
                {2, 0, 3.0 / 32.0},
                {-2, 1, 2.0 / 32.0},
                {-1, 1, 4.0 / 32.0},
                {0, 1, 5.0 / 32.0},
                {1, 1, 4.0 / 32.0},
                {2, 1, 2.0 / 32.0}
            }
        },
        {
            ATKINSON, {
                {1, 0, 1.0 / 8.0},
                {2, 0, 1.0 / 8.0},
                {-1, 1, 1.0 / 8.0},
                {0, 1, 1.0 / 8.0},
                {1, 1, 1.0 / 8.0},
                {0, 2, 1.0 / 8.0}
            }
        },
        {
            STEVENSON_ARCE, {
                {1, 0, 32.0 / 200.0},
                {2, 0, 12.0 / 200.0},
                {-2, 1, 5.0 / 200.0},
                {-1, 1, 12.0 / 200.0},
                {0, 1, 32.0 / 200.0},
                {1, 1, 12.0 / 200.0},
                {2, 1, 5.0 / 200.0},
                {-2, 2, 2.0 / 200.0},
                {-1, 2, 5.0 / 200.0},
                {0, 2, 12.0 / 200.0},
                {1, 2, 5.0 / 200.0},
                {2, 2, 2.0 / 200.0}
            }
        }
    };
}

